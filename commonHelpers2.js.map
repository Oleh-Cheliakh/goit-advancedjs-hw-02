{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//Selects button, input and timer elements\nconst dataPicker = document.querySelector('#datetime-picker');\nconst buttonStart = document.querySelector('button[data-start]');\nconst daysNumber = document.querySelector('span[data-days]');\nconst hoursNumber = document.querySelector('span[data-hours]');\nconst minutesNumber = document.querySelector('span[data-minutes]');\nconst secondsNumber = document.querySelector('span[data-seconds]');\n\n//Creates variable in order to store picked data and interval ID\nlet pickedDate, intervalId;\n\n//Variable stores showed time\nlet dataShowed = {\n  days: 0,\n  hours: 0,\n  minutes: 0,\n  seconds: 0,\n};\n\n//Sets button default condition\nbuttonStart.disabled = true;\n\n//Parameters for data picker\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    //Checks if selected date bigger than current date\n    if (selectedDates[0] <= new Date()) {\n      //Changes button condition to active\n      if (!buttonStart.disabled) {\n        buttonStart.disabled = true;\n      }\n      //Show custom warning message if wrong data was picked\n      return iziToast.show({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        color: 'red',\n        position: 'topRight',\n      });\n    }\n    //Enable button after date was picked\n    buttonStart.disabled = false;\n    //Save picked date to variable\n    pickedDate = selectedDates[0];\n  },\n};\n\n//Invokes custom data picker\nflatpickr('#datetime-picker', options);\n\n//Converts data from picker in object\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n//Adds zero at the beginning if number has only 1 digit\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\n//Show time left in html elements\nfunction showTimeLeft() {\n  const currentDate = new Date();\n  const leftTime = pickedDate - currentDate;\n  //Stops countind if timer reached zero\n  if (leftTime < 1) {\n    //Enagle data picker and stops timer after timer reaches 0\n    dataPicker.disabled = false;\n    return clearInterval(intervalId);\n  }\n  const { days, hours, minutes, seconds } = convertMs(leftTime);\n\n  //Changes time in element only if it's not equal to currently showing time\n  if (days != dataShowed.days) {\n    daysNumber.textContent = addLeadingZero(days);\n    dataShowed.days = days;\n  }\n  if (hours != dataShowed.hours) {\n    hoursNumber.textContent = addLeadingZero(hours);\n    dataShowed.hours = hours;\n  }\n  if (minutes != dataShowed.minutes) {\n    minutesNumber.textContent = addLeadingZero(minutes);\n    dataShowed.minutes = minutes;\n  }\n  if (seconds != dataShowed.seconds) {\n    secondsNumber.textContent = addLeadingZero(seconds);\n    dataShowed.seconds = seconds;\n  }\n}\n\n//Starts time count down on button start click\nbuttonStart.addEventListener('click', event => {\n  //Disable button and data picker after timer start\n  buttonStart.disabled = true;\n  dataPicker.disabled = true;\n  intervalId = setInterval(showTimeLeft, 1000);\n});\n"],"names":["dataPicker","buttonStart","daysNumber","hoursNumber","minutesNumber","secondsNumber","pickedDate","intervalId","dataShowed","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","showTimeLeft","currentDate","leftTime","event"],"mappings":"+IAMA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAa,SAAS,cAAc,iBAAiB,EACrDC,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAgB,SAAS,cAAc,oBAAoB,EAC3DC,EAAgB,SAAS,cAAc,oBAAoB,EAGjE,IAAIC,EAAYC,EAGZC,EAAa,CACf,KAAM,EACN,MAAO,EACP,QAAS,EACT,QAAS,CACX,EAGAP,EAAY,SAAW,GAGvB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,GAAIA,EAAc,IAAM,IAAI,KAE1B,OAAKT,EAAY,WACfA,EAAY,SAAW,IAGlBU,EAAS,KAAK,CACnB,MAAO,UACP,QAAS,qCACT,MAAO,MACP,SAAU,UAClB,CAAO,EAGHV,EAAY,SAAW,GAEvBK,EAAaI,EAAc,EAC5B,CACH,EAGAE,EAAU,mBAAoBH,CAAO,EAGrC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAGA,SAASC,GAAe,CACtB,MAAMC,EAAc,IAAI,KAClBC,EAAWjB,EAAagB,EAE9B,GAAIC,EAAW,EAEb,OAAAvB,EAAW,SAAW,GACf,cAAcO,CAAU,EAEjC,KAAM,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUU,CAAQ,EAGxDR,GAAQP,EAAW,OACrBN,EAAW,YAAciB,EAAeJ,CAAI,EAC5CP,EAAW,KAAOO,GAEhBC,GAASR,EAAW,QACtBL,EAAY,YAAcgB,EAAeH,CAAK,EAC9CR,EAAW,MAAQQ,GAEjBC,GAAWT,EAAW,UACxBJ,EAAc,YAAce,EAAeF,CAAO,EAClDT,EAAW,QAAUS,GAEnBC,GAAWV,EAAW,UACxBH,EAAc,YAAcc,EAAeD,CAAO,EAClDV,EAAW,QAAUU,EAEzB,CAGAjB,EAAY,iBAAiB,QAASuB,GAAS,CAE7CvB,EAAY,SAAW,GACvBD,EAAW,SAAW,GACtBO,EAAa,YAAYc,EAAc,GAAI,CAC7C,CAAC"}